syntax = "proto3";

package datawitch.tictacmicro.api;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "tic-tac-micro/api/v1";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service PlayerService {
  rpc ListPlayers(ListPlayersRequest) returns (ListPlayersResponse) {}

  rpc GetPlayer(GetPlayerRequest) returns (Player) {}

  rpc CreatePlayer(CreatePlayerRequest) returns (Player) {}

  rpc UpdatePlayer(UpdatePlayerRequest) returns (Player) {}

  rpc DeletePlayer(DeletePlayerRequest) returns (google.protobuf.Empty) {}
}

message Player {
  string name = 1;
}

message ListPlayersRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListPlayersResponse {
  // The field name should match the noun "player" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated Player players = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetPlayerRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreatePlayerRequest {
  // The parent resource name where the player is to be created.
  string parent = 1;

  // The player id to use for this player.
  string player_id = 2;

  // The player resource to create.
  // The field name should match the Noun in the method name.
  Player player = 3;
}

message UpdatePlayerRequest {
  // The player resource which replaces the resource on the server.
  Player player = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

message DeletePlayerRequest {
  // The resource name of the player to be deleted.
  string name = 1;
}
