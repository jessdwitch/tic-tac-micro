syntax = "proto3";

package datawitch.tictacmicro.api;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "tic-tac-micro/api/v1";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service GameService {
  rpc ListGames(ListGamesRequest) returns (ListGamesResponse) {}

  rpc GetGame(GetGameRequest) returns (Game) {}

  rpc CreateGame(CreateGameRequest) returns (Game) {}

  rpc UpdateGame(UpdateGameRequest) returns (Game) {}

  rpc DeleteGame(DeleteGameRequest) returns (google.protobuf.Empty) {}
}

message Game {
  string name = 1;
  repeated string board = 2;
  // Output only.
  string winner = 3;
}

message ListGamesRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListGamesResponse {
  // The field name should match the noun "game" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated Game games = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetGameRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateGameRequest {
  // The parent resource name where the game is to be created.
  string parent = 1;

  // The game id to use for this game.
  string game_id = 2;

  // The game resource to create.
  // The field name should match the Noun in the method name.
  Game game = 3;
}

message UpdateGameRequest {
  // The game resource which replaces the resource on the server.
  Game game = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;

  // Dry-run to see if a move is valid before committing.
  bool validate_only = 3;
}

message DeleteGameRequest {
  // The resource name of the game to be deleted.
  string name = 1;
}
